{"id":"index.html","dependencies":[{"name":"/Users/chrismarx/github/qgis-to-web-parcel-test/package.json","includedInParent":true,"mtime":1532524385000},{"name":"./css/leaflet.css","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/css/leaflet.css"},{"name":"./css/qgis2web.css","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/css/qgis2web.css"},{"name":"./css/fontawesome-all.min.css","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/css/fontawesome-all.min.css"},{"name":"./css/leaflet-control-geocoder.Geocoder.css","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/css/leaflet-control-geocoder.Geocoder.css"},{"name":"./js/qgis2web_expressions.js","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/js/qgis2web_expressions.js"},{"name":"./js/leaflet.js","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/js/leaflet.js"},{"name":"./js/leaflet.rotatedMarker.js","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/js/leaflet.rotatedMarker.js"},{"name":"./js/leaflet.pattern.js","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/js/leaflet.pattern.js"},{"name":"./js/leaflet-hash.js","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/js/leaflet-hash.js"},{"name":"./js/Autolinker.min.js","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/js/Autolinker.min.js"},{"name":"./js/rbush.min.js","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/js/rbush.min.js"},{"name":"./js/labelgun.min.js","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/js/labelgun.min.js"},{"name":"./js/labels.js","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/js/labels.js"},{"name":"./js/leaflet-control-geocoder.Geocoder.js","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/js/leaflet-control-geocoder.Geocoder.js"},{"name":"./data/cb_2017_us_state_20m_0.js","dynamic":true,"parent":"/Users/chrismarx/github/qgis-to-web-parcel-test/index.html","resolved":"/Users/chrismarx/github/qgis-to-web-parcel-test/data/cb_2017_us_state_20m_0.js"}],"generated":{"html":"<!doctype html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <meta name=\"viewport\" content=\"initial-scale=1,user-scalable=no,maximum-scale=1,width=device-width\">\n        <meta name=\"mobile-web-app-capable\" content=\"yes\">\n        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n        <link rel=\"stylesheet\" href=\"/065e5d2474f2efd2c680e1dbca5faa48.css\">\n        <link rel=\"stylesheet\" href=\"/6d0814be5088c106f807c2440e395908.css\"><link rel=\"stylesheet\" href=\"/87c8f34f4d82d88fc4169ae8f6255b5a.css\">\n        <link rel=\"stylesheet\" href=\"/a099ba935337fd041fa3354f18c06faf.css\">\n        <style>\n        #map {\n            width: 1003px;\n            height: 663px;\n        }\n        </style>\n        <title></title>\n    </head>\n    <body>\n        <div id=\"map\">\n        </div>\n        <script src=\"/461649ea43503141fefabd980af0eb7b.js\"></script>\n        <script src=\"/870f1c7e5c53457d07c832346c192402.js\"></script>\n        <script src=\"/a5cff7419d6df5f20edd2b612127811a.js\"></script>\n        <script src=\"/cc0e9966751f6d868b3afa92d060d503.js\"></script>\n        <script src=\"/8d2470f86898b2bd752db6b124699374.js\"></script>\n        <script src=\"/2865d3e874afc0ad79f91bbf694a9efb.js\"></script>\n        <script src=\"/eafc74ccb0f7de48425e2f51d803761f.js\"></script>\n        <script src=\"/1b0c131dfa2079269a598f48f24433a5.js\"></script>\n        <script src=\"/d74bee1b192be6586e8e04e115c84194.js\"></script>\n        <script src=\"/51f76a49abc778a8ab13fc2e660ddbbf.js\"></script>\n        <script src=\"/3d29d0f5a30f95e96ccbeeafd83ac7d8.js\"></script>\n        <script>\n        var highlightLayer;\n        function highlightFeature(e) {\n            highlightLayer = e.target;\n\n            if (e.target.feature.geometry.type === 'LineString') {\n              highlightLayer.setStyle({\n                color: '#ffff00',\n              });\n            } else {\n              highlightLayer.setStyle({\n                fillColor: '#ffff00',\n                fillOpacity: 1\n              });\n            }\n        }\n        var map = L.map('map', {\n            zoomControl:true, maxZoom:28, minZoom:1\n        }).fitBounds([[-79.80639003863648,-188.147969675],[169.07272003863648,188.74762667500036]]);\n        var hash = new L.Hash(map);\n        map.attributionControl.addAttribution('<a href=\"https://github.com/tomchadwin/qgis2web\" target=\"_blank\">qgis2web</a>');\n        var bounds_group = new L.featureGroup([]);\n        function setBounds() {\n        }\n        function pop_cb_2017_us_state_20m_0(feature, layer) {\n            layer.on({\n                mouseout: function(e) {\n                    for (i in e.target._eventParents) {\n                        e.target._eventParents[i].resetStyle(e.target);\n                    }\n                },\n                mouseover: highlightFeature,\n            });\n            var popupContent = '<table>\\\n                    <tr>\\\n                        <th scope=\"row\">STATEFP</th>\\\n                        <td>' + (feature.properties['STATEFP'] !== null ? Autolinker.link(String(feature.properties['STATEFP'])) : '') + '</td>\\\n                    </tr>\\\n                    <tr>\\\n                        <th scope=\"row\">STATENS</th>\\\n                        <td>' + (feature.properties['STATENS'] !== null ? Autolinker.link(String(feature.properties['STATENS'])) : '') + '</td>\\\n                    </tr>\\\n                    <tr>\\\n                        <th scope=\"row\">AFFGEOID</th>\\\n                        <td>' + (feature.properties['AFFGEOID'] !== null ? Autolinker.link(String(feature.properties['AFFGEOID'])) : '') + '</td>\\\n                    </tr>\\\n                    <tr>\\\n                        <th scope=\"row\">GEOID</th>\\\n                        <td>' + (feature.properties['GEOID'] !== null ? Autolinker.link(String(feature.properties['GEOID'])) : '') + '</td>\\\n                    </tr>\\\n                    <tr>\\\n                        <th scope=\"row\">STUSPS</th>\\\n                        <td>' + (feature.properties['STUSPS'] !== null ? Autolinker.link(String(feature.properties['STUSPS'])) : '') + '</td>\\\n                    </tr>\\\n                    <tr>\\\n                        <th scope=\"row\">NAME</th>\\\n                        <td>' + (feature.properties['NAME'] !== null ? Autolinker.link(String(feature.properties['NAME'])) : '') + '</td>\\\n                    </tr>\\\n                    <tr>\\\n                        <th scope=\"row\">LSAD</th>\\\n                        <td>' + (feature.properties['LSAD'] !== null ? Autolinker.link(String(feature.properties['LSAD'])) : '') + '</td>\\\n                    </tr>\\\n                    <tr>\\\n                        <th scope=\"row\">ALAND</th>\\\n                        <td>' + (feature.properties['ALAND'] !== null ? Autolinker.link(String(feature.properties['ALAND'])) : '') + '</td>\\\n                    </tr>\\\n                    <tr>\\\n                        <th scope=\"row\">AWATER</th>\\\n                        <td>' + (feature.properties['AWATER'] !== null ? Autolinker.link(String(feature.properties['AWATER'])) : '') + '</td>\\\n                    </tr>\\\n                </table>';\n            layer.bindPopup(popupContent, {maxHeight: 400});\n        }\n\n        function style_cb_2017_us_state_20m_0_0() {\n            return {\n                pane: 'pane_cb_2017_us_state_20m_0',\n                opacity: 1,\n                color: 'rgba(35,35,35,1.0)',\n                dashArray: '',\n                lineCap: 'butt',\n                lineJoin: 'miter',\n                weight: 1.0, \n                fill: true,\n                fillOpacity: 1,\n                fillColor: 'rgba(146,88,78,1.0)',\n            }\n        }\n        map.createPane('pane_cb_2017_us_state_20m_0');\n        map.getPane('pane_cb_2017_us_state_20m_0').style.zIndex = 400;\n        map.getPane('pane_cb_2017_us_state_20m_0').style['mix-blend-mode'] = 'normal';\n        var layer_cb_2017_us_state_20m_0 = new L.geoJson(json_cb_2017_us_state_20m_0, {\n            attribution: '<a href=\"\"></a>',\n            pane: 'pane_cb_2017_us_state_20m_0',\n            onEachFeature: pop_cb_2017_us_state_20m_0,\n            style: style_cb_2017_us_state_20m_0_0,\n        });\n        bounds_group.addLayer(layer_cb_2017_us_state_20m_0);\n        map.addLayer(layer_cb_2017_us_state_20m_0);\n        var osmGeocoder = new L.Control.Geocoder({\n            collapsed: true,\n            position: 'topleft',\n            text: 'Search',\n            title: 'Testing'\n        }).addTo(map);\n        document.getElementsByClassName('leaflet-control-geocoder-icon')[0]\n        .className += ' fa fa-search';\n        document.getElementsByClassName('leaflet-control-geocoder-icon')[0]\n        .title += 'Search for a place';\n        var baseMaps = {};\n        L.control.layers(baseMaps,{'<img src=\"legend/cb_2017_us_state_20m_0.png\" /> cb_2017_us_state_20m': layer_cb_2017_us_state_20m_0,},{collapsed:false}).addTo(map);\n        setBounds();\n        </script>\n    </body>\n</html>\n"},"hash":"538c3fdb3aedecb7f2c734e613783276","cacheData":{}}